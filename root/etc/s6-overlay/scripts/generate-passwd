#!/bin/env python
import sys
import hashlib
import base64
import uuid
import os
from pathlib import Path
import configparser
from argparse import ArgumentParser


def generate_pbkdf(password):
    salt = uuid.uuid4()
    salt_bytes = salt.bytes

    password = str.encode(password)
    hashed_password = hashlib.pbkdf2_hmac('sha512', password, salt_bytes, 100000, dklen=64)
    b64_salt = base64.b64encode(salt_bytes).decode("utf-8")
    b64_password = base64.b64encode(hashed_password).decode("utf-8")
    return "@ByteArray({salt}:{password})".format(salt=b64_salt,password=b64_password)


def parse_password_from_env():
    raw_password = os.environ.get("WEB_PASSWORD")
    raw_password_file = os.environ.get("WEB_PASSWORD_FILE")
    pbkdf2_password = os.environ.get("WEB_PBKDF2_PASSWORD")
    pbkdf2_password_file = os.environ.get("WEB_PBKDF2_PASSWORD_FILE")

    if raw_password_file:
        raw_password_file = Path(raw_password_file)
        if raw_password_file.exists():
            raw_password = raw_password_file.read_text()
    if raw_password:
        return generate_pbkdf(raw_password)

    if pbkdf2_password_file:
        pbkdf2_password_file = Path(pbkdf2_password_file)
        if pbkdf2_password_file.exists():
            pbkdf2_password = pbkdf2_password_file.read_text()
    if pbkdf2_password:
        return pbkdf2_password

    return None


def set_username_password(qbittorrent_conf):
    username = os.environ.get("WEB_USER", "admin")
    pbkdf2_password = parse_password_from_env()

    # edit qbittorrent configuration with configparser
    config = configparser.ConfigParser()
    config.optionxform = str
    config.read(qbittorrent_conf)
    config["Preferences"]["WebUI\\Username"] = username
    config["Preferences"]["WebUI\\Password_PBKDF2"] = pbkdf2_password
    with open(qbittorrent_conf, 'w') as configfile:
        config.write(configfile, space_around_delimiters=False)


def main():
    parser = ArgumentParser()
    parser.add_argument("qbittorrent_conf", help="Path to qbittorrent configuration file")
    args = parser.parse_args()

    set_username_password(args.qbittorrent_conf)


if __name__ == '__main__':
    main()
